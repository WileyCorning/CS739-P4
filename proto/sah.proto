syntax="proto3";
package haystack_rpc;

// /* Within-cluster messages */
// service Volunteering {
//     rpc Volunteer(Empty) returns (Empty);
// }


service Volunteering {
    rpc Bidir(stream WorkerToLeader) returns (stream LeaderToWorker);
}

message Empty { }

message LeaderToWorker {
    uint32 seq = 1;
    oneof payload {
        ProblemSetup setup = 2;
        BatchRequest batch = 3;
        ProblemTeardown teardown = 4;
    }
}

message ProblemSetup {
    uint32 problem_id = 1;
    HaystackSpec spec = 2;
}
message ProblemTeardown {
    uint32 problem_id = 1;
}

message BatchRequest {
    uint32 problem_id = 1;
    uint32 batch_id = 2;
    uint64 range_start = 3;
    uint64 range_length = 4;
}

message WorkerToLeader {
    uint32 seq = 1;
    optional WorkerReport report = 2;
}
    
message WorkerReport {
    uint32 problem_id = 1;
    uint32 block_id = 2;
    uint64 elapsed_ms = 3;
    oneof status {
        Empty ongoing = 10; // new_distinct_terms
        Empty ran_to_end = 11; // new_distinct_terms
        HaystackSolution found_solution = 12;
        string error = 13;
    }
}

message HaystackSolution {
    uint64 value = 1;
}

message HaystackSpec {
    uint64 target = 1;
}

/* Client messages */
service Frontend {
    rpc OneShotSolve(StartRequest) returns (OneShotResponse);
}


message StartRequest {
    HaystackSpec spec = 1;
    uint64 time_limit_ms = 2;
}

message OneShotResponse {
    uint64 elapsed_realtime_ms = 1;
    oneof outcome { 
        HaystackSolution solution = 10;
        string error = 11;
    }
}